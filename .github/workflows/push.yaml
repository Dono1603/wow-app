# Store the personal access token, Docker Hub username and password as GitHub secrets.
name: 'CI'

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'k8s_config/'
      # Triggers the workflow when a PR created against main branch has been closed
  pull_request:
    branches:
    - main
    types: [closed]


jobs:
  create-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: get version
        id: get-version
        run: |
          echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: checkout
        uses: actions/checkout@v2

      - name: Login to the registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: create image
        run: |
          docker build -t edn:${{ steps.get-version.outputs.VERSION }} .
          echo 'Created Image with name:tag = test-app:${{ steps.get-version.outputs.VERSION }}'

      - name: get-images-id
        id: image-id
        run: |
          echo ::set-output name=IMAGE_ID::$(docker images -q test-app:${{ steps.get-version.outputs.VERSION }})

      - name: upload image to registry
        run: |
          docker tag ${{ steps.image-id.outputs.IMAGE_ID }} yumyum160/edn:${{ steps.get-version.outputs.VERSION }}
          docker push yumyum160/edn:${{ steps.get-version.outputs.VERSION }}

      - name: install yq
        uses: mikefarah/yq@v4.15.1

      - name: update infra yaml file
        run: |
          cd k8s_config
          yq e -i '.spec.template.spec.containers[0].image="yumyum160/edn:${{ steps.get-version.outputs.VERSION }}"' deployment.yaml
          cat deployment.yml

      - name: push change
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          source_file: k8s_config/calc-deployment.yml
          destination_repo: Dono1603/wow-app
          destination_branch: main
          destination_folder: k8s_config
          user_email: donovan.dupuis@gmail.com
          user_name: Dono1603
          commit_message: update image version ${{ steps.get_version.outputs.VERSION }} in yml file